<!--
$Id: ANIMATEBOX.HTM,v 1.11 2017/08/26 02:54:07 fyurisich Exp $
-->

<!DOCTYPE html>
<html>
   <head>
      <meta http-equiv=Content-Type content="text/html; charset=Windows-1252">

      <title>ANIMATEBOX</title>

      <style>
         html { overflow-y: scroll; }
         body { padding: 0px; margin: 0px; overflow: auto; background-color: #FFFFFF; }
         #winchm_template_navigation { margin-top: 0px; margin-left: 0px; margin-bottom: 0px; margin-right: 0px;
           padding-top: 5px; padding-left: 5px; padding-bottom: 5px; padding-right: 5px;
           font-family: arial, helvetica, sans-serif; font-size: 10px; font-style: normal; font-weight: normal;
           color: #626262; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #DBDBDB;
           background-color: #E2EDFA; width: auto; }
         #winchm_template_button { float: right; top: -7px; position: relative; text-align: right; right: -5px;
           height: auto; }
         #winchm_template_title { font-family: Segoe UI, Tahoma, Geneva, Verdana, sans-serif; font-weight: bold;
            font-size: 18px; color: 353535; margin-top: 0px; margin-left: 0px; margin-bottom: 0px; margin-right: 0px;
            padding-top: 10px; padding-left: 5px; padding-bottom: 10px; padding-right: 10px; border-bottom-style: solid;
            border-bottom-width: 1px; border-bottom-color: #C7C7C7; width: auto; background-color: #C4DBF4;
            text-align: left; }
         #winchm_template_content { padding: 0px; margin-top: 15px; margin-left: 15px; margin-bottom: 15px;
            margin-right: 15px; width: auto !important; width: 100%; }
         #winchm_template_footer { border-width: 1px; border-color: #c0c0c0; border-top-style: solid; margin-top: 0px;
            margin-left: 15px; margin-bottom: 5px; margin-right: 15px; padding-top: 6px; padding-left: 0px;
            padding-bottom: 20px; padding-right: 0px; font-family: arial, helvetica, sans-serif; font-size: 9px;
            color: #909090; text-align: left; width: auto; }
         #winchm_template_navigation a:link { text-decoration: none; color: #0000ff }
         #winchm_template_navigation a:visited { text-decoration: none; color: #0000ff }
         #winchm_template_navigation a:active { text-decoration: none; color: #0000ff }
         #winchm_template_navigation a:hover {text-decoration: none; color: #0000ff }
         a:link { text-decoration: underline; color:#0033cc }
         a:visited { text-decoration: underline; color: #0033cc }
         a:active { text-decoration: underline; color: #0033cc }
         a:hover { text-decoration: underline;color: #ff0000 }
         @media print { #winchm_template_button{ visibility:hidden; } }
      </style>
   </head>

   <body>
      <div id="winchm_template_title">
         <div id="winchm_template_button">
            <A href="ANIGIF.HTM" title="Previous topic">
               <img id="winchm_template_prev" alt="Previous topic" src="template4/btn_prev_n.gif" border="0"></A>
            <A href="BROWSE.HTM" title="Next topic">
               <img id="winchm_template_next" alt="Next topic" src="template4/btn_next_n.gif" border="0"></A>
         </div>ANIMATEBOX
      </div>
      <div id="winchm_template_navigation">Help &gt; Controls &gt;
      </div>
      <div id="winchm_template_content">
         <div class=Section1>

<PRE>
<span style='color:darkgreen'><b>
/////////////////////////////////////////////////////////////////////
// ANIMATEBOX
/////////////////////////////////////////////////////////////////////
</b></span>
Creates an animation control inside a form, to play an AVI file.
A set of commands is provided for manipulating an existing control.
Note that the file must not contain sound or it will not be played.

<u>Control creation</u>:

*** Standard syntax:

   @ nRow, nCol ANIMATEBOX Name ;
      [ OBJ Obj ; ]
      [ &lt;OF, PARENT&gt; Parent ; ]
      [ WIDTH nWidht ; ]
      [ HEIGHT nHeight ; ]
      [ FILE cFile ; ]
      [ AUTOPLAY ; ]
      [ CENTER ; ]
      [ TRANSPARENT ; ]
      [ HELPID nHelpid ; ]
      [ SUBCLASS Subclass ; ]
      [ INVISIBLE ; ]
      [ NOTABSTOP ; ]
      [ DISABLED ; ]
      [ RTL ; ]
      [ TOOLTIP cTooltip ]

*** Alternative syntax:

   DEFINE ANIMATEBOX Name ;
      [ COL nCol ]
      [ ROW nRow ]
      [ OBJECT Obj ]
      [ PARENT Parent ]
      [ WIDTH nWidth ]
      [ HEIGHT nHeight ]
      [ FILE cFile ]
      [ AUTOPLAY &lt;.T., .F.&gt; ]
      [ CENTER &lt;.T., .F.&gt; ]
      [ TRANSPARENT &lt;.T., .F.&gt; ]
      [ HELPID nHelpid ]
      [ SUBCLASS Subclass ]
      [ &lt;VISIBLE, INVISIBLE&gt; &lt;.T., .F.&gt; ]
      [ TABSTOP &lt;.T., .F.&gt; ]
      [ &lt;ENABLE, DISABLED&gt; &lt;.T., .F.&gt; ]
      [ RTL &lt;.T., .F.&gt; ]
      [ TOOLTIP cTooltip ]
   END ANIMATEBOX

*** OOP syntax:

   [ Obj := ] TAnimateBox():Define( cName, [ cParent ], [ nCol ], [ nRow ], ;
      [ nWidth ], [ nHeight ], [ lAutoplay ], [ lCenter ], [ lTransparent ], ;
      [ cFile ], [ nHelpId ], [ lInvisible ], [ lNoTabstop ], [ lDisabled ], ;
      [ lRtl ], [ cToolTip ] )

<u>Related commands, functions and methods</u>:

*** Standard syntax:

   OPEN ANIMATEBOX ControlName OF ParentForm FILE cFileName
      Loads an AVI file and shows its first frame.
   PLAY ANIMATEBOX ControlName OF ParentForm
      Plays the file in the background while the app continues executing.
   SEEK ANIMATEBOX ControlName OF ParentForm POSITION nFrame
      Shows the frame at position nFrame.
   STOP ANIMATEBOX ControlName OF ParentForm
      Stops playing the file. The last played frame remains displayed.
   CLOSE ANIMATEBOX ControlName OF ParentForm
      Closes the file.
   DESTROY ANIMATEBOX ControlName OF ParentForm
      Releases the control.

*** Alternative syntax:

   OpenAnimateBox( ControlName, ParentForm, cFileName )
      Loads an AVI file and shows its first frame.
   PlayAnimateBox( ControlName, ParentForm )
      Plays the file in the background while the app continues executing.
   SeekAnimateBox( ControlName, ParentForm, nFrame )
      Shows the frame at position nFrame.
   StopAnimateBox( ControlName, ParentForm )
      Stops playing the file. The last played frame remains displayed.
   CloseAnimateBox( ControlName, ParentForm )
      Closes the file.
   DestroyAnimateBox( ControlName, ParentForm )
      Releases the control.

*** OOP syntax:

   Obj:Open( cFileName )
      Loads an AVI file and shows its first frame.
   Obj:Play()
      Plays the file in the background while the app continues executing.
   Obj:Seek( nFrame )
      Shows the frame at position nFrame.
   Obj:Stop()
      Stops playing the file. The last played frame remains displayed.
   Obj:Close()
      Closes the file.
   Obj:Release()
      Releases the control.

<u>Notes on clauses</u>:

   1. OBJ and OBJECT set a reference to the control into variable Obj.
      When using OBJECT, the variable must be previously declared.
      When using OBJ, if the variable does not exist, it's created PRIVATE.
   2. PARENT declares which window is the parent (owner) of the control.
      It can be ommited when used inside a DEFINE/END WINDOW structure.
   3. ROW and COL define the position of the control inside it's parent client
      area. Default is 0.
   4. WIDTH and HEIGHT define the dimension of the control. Default is 0.
   5. TABSTOP and NOTABSTOP specify if the control can/can't be focused using
      TAB key. Default is TABSTOP.
   6. DISABLED specifies that the control can't receive mouse clicks and
      pressed keys. Default is ENABLED.
   7. SUBCLASS indicates that the control must be an instance of the specified
      class, instead of the default TActiveX class.
   8. VISIBLE and INVISIBLE specify if the control must be visible/hidden when
      created. Default is VISIBLE.
   9. RTL specifies that the control must have WS_EX_LTRREADING, WS_EX_LEFT and
      WS_EX_LEFTSCROLLBAR styles.
      Default is .F.
  10. HELPID associates a help topic within the current help file to the
      control. Default is 0.
  11. FILE specifies that the control must load and show the firt frame of the
      indicated AVI file. Default is NIL.
  12. AUTOPLAY specifies that the control must have <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb761886(v=vs.85).aspx" target="_blank">ACS_AUTOPLAY</a> style.
      Default is .F.
  13. CENTER specifies that the control must have <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb761886(v=vs.85).aspx" target="_blank">ACS_CENTER</a> style.
      Default is .F.
  14. TRANSPARENT specifies that the control must have <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb761886(v=vs.85).aspx" target="_blank">ACS_TRANSPARENT</a> style.
      Default is .F.
  15. TOOLTIP sets a text that will be display when the mouse is positioned
      over the control. Default is NIL.

<u>Notes on parameters</u>:

   1. nFrame, nHelpid, nRow, nCol, nWidth and nHeight must be numbers.
   2. Name, Parent, ControlName and ParentForm must be valid identifiers
      enclosed or not within quotes.
   3. cFile, cTooltip and cFileName must be strings.
   4. Obj and Subclass must be valid identifiers not enclosed within quotes.
   5. cName and cParent must be strings containing valid identifiers.
   6. lAutoplay, lCenter, lTransparent, lInvisible, lNoTabstop, lDisabled
      and lRtl must be .T. or .F.
</PRE>

         </div>
      </div>
      <div id="winchm_template_footer">
         <FONT color=#808080 size=1>Copyright © 2013-2017 ooHG Development Team -
         </FONT>
         <A href="https://sourceforge.net/projects/oohg/" target="_blank">
            <FONT size=1>https://sourceforge.net/projects/oohg/
            </FONT></A>
      </div>
   </body>
</html>
